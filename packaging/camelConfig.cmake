cmake_minimum_required(VERSION 3.17)

set(camel_known_comps static shared)
set(camel_comp_static NO)
set(camel_comp_shared NO)

foreach (camel_comp IN LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
  if (camel_comp IN camel_known_comps)
    set(camel_comp_${camel_comp} YES)
  else ()
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
      "camel does not recognize component ${camel_comp}")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
  endif ()
endforeach ()

if (camel_comp_static AND camel_comp_shared)
  set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
    "camel `static` and `shared` components are mutually exclusive")
  set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
  return()
endif ()

set(camel_static_targets "${CMAKE_CURRENT_LIST_DIR}/camel-static-targets.cmake")
set(camel_shared_targets "${CMAKE_CURRENT_LIST_DIR}/camel-shared-targets.cmake")

macro(camel_load_targets type)
  if (NOT EXISTS "${camel_${type}_targets}")
      set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
          "camel `${type}` libraries were requested but not found.")
      set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
      return()
  endif ()
  include("${camel_${type}_targets}")
endmacro()

if (camel_comp_static)
    camel_load_targets(static)
elseif (camel_comp_shared)
    camel_load_targets(shared)
elseif (DEFINED camel_SHARED_LIBS AND camel_SHARED_LIBS)
    camel_load_targets(shared)
elseif (DEFINED camel_SHARED_LIBS AND NOT camel_SHARED_LIBS)
    camel_load_targets(static)
elseif (BUILD_SHARED_LIBS)
    if (EXISTS "${camel_shared_targets}")
        camel_load_targets(shared)
    else ()
        camel_load_targets(static)
    endif ()
else ()
    if (EXISTS "${camel_static_targets}")
        camel_load_targets(static)
    else ()
        camel_load_targets(shared)
    endif ()
endif ()
